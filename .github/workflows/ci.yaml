name: Lint and Test Charts

on:
  workflow_dispatch:
  pull_request:
    branches:
    - main

  push:
    branches:
    - main
    tags:
    - v*

jobs:
  lint-chart:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: 'true'

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.10.0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        check-latest: true

    - name: Set up chart-testing
      uses: helm/chart-testing-action@v2.3.1

    - name: Run chart-testing (lint)
      run: ct lint --target-branch ${{ github.event.repository.default_branch }}

    - name: Generate manifests for scoring
      run: |
        mkdir -p "manifests"
        for CHART in $(ls -d charts/*/); do
          echo "Generating manifests for ${CHART}..."
          helm dependency build "${CHART}" --repository-config .github/repositories.yaml
          helm template "${CHART}" --generate-name --output-dir "manifests" --repository-config .github/repositories.yaml
        done

    - name: Check kube-score
      uses: piraces/kube-score-ga@v0.1.3
      with:
        manifests-folders: manifests/**/*.yaml
        ignore-exit-code: true

  lint-docs:
    runs-on: ubuntu-latest
    needs: lint-chart
    steps:
    - name: Checkout
      uses: actions/checkout@v2.5.0
      with:
        fetch-depth: 0
        submodules: 'true'

    - name: Lint helm docs
      run: bash .github/helm-docs.sh

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        trivy-config: .github/trivy.yaml
