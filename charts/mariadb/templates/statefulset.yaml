apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mariadb.fullname" . }}
  labels:
    {{- include "mariadb.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "mariadb.fullname" . }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mariadb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mariadb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mariadb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "Always" }}
          # command: ["sleep", "infinity"]  # for debugging
          # command: ["bash", "-x", "/usr/local/bin/docker-entrypoint.sh", "mariadbd"]
          args: {{- range .Values.mysqld.extraArgs }}{{ . }}{{- end }}
          env:
            - name: MARIADB_ROOT_PASSWORD_FILE
              value: /run/credentials/mariadb-root-password
            {{- range $key, $value := .Values.mysqld.extraEnv }}
            - {name: {{ $key }}, value: "{{ $value }}"}
            {{- end }}
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            failureThreshold: 10
            periodSeconds: 30
            tcpSocket:
              port: mysql
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 60
            tcpSocket:
              port: mysql
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 600
            tcpSocket:
              port: mysql
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: {{ include "mariadb.fullname" . }}-rundir
            mountPath: /run/mysqld
            readOnly: false
          - name: {{ include "mariadb.fullname" . }}-data
            mountPath: /var/lib/mysql
            readOnly: false
          - name: {{ include "mariadb.fullname" . }}-config
            mountPath: /etc/mysql/conf.d
            readOnly: true
          - name: {{ include "mariadb.fullname" . }}-secret
            mountPath: /run/credentials
            readOnly: true
          {{- if .Values.tls.enabled }}
          - name: {{ include "mariadb.fullname" . }}-tls
            mountPath: /run/tls
            readOnly: true
          {{- end }}
          {{- if .Values.ldap.enabled }}
          - name: {{ include "mariadb.fullname" . }}-ldap-rundir
            mountPath: /run/nslcd
          {{- end }}
        {{- if .Values.tls.enabled }}
        # Add container for TLS refreshes
        {{- end }}
        {{- if .Values.ldap.enabled }}
        - name: {{ .Chart.Name }}-ldap
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.ldap.image.repository }}:{{ .Values.ldap.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.ldap.image.pullPolicy | default "Always" }}
          env:
            - {name: LDAP_URI, value: {{ .Values.ldap.uri }}}
            - {name: LDAP_BASE, values {{ .Values.ldap.base }}}
            - {name: LDAP_BINDDN, values {{ .Values.ldap.bindDn }}}
          resources:
            {{- toYaml .Values.ldap.resources | nindent 12 }}
          volumeMounts:
          - name: {{ include "mariadb.fullname" . }}-ldap-templates
            mountPath: /templates
          - name: {{ include "mariadb.fullname" . }}-ldap-rundir
            mountPath: /run/nslcd
          - name: {{ include "mariadb.fullname" . }}-secret
            mountPath: /run/secrets
          - name: {{ include "mariadb.fullname" . }}-tls
            mountPath: /run/tls
        {{- end }}
      volumes:
      - name: {{ include "mariadb.fullname" . }}-rundir
        emptyDir:
      - name: {{ include "mariadb.fullname" . }}-data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "mariadb.fullname" . }}
      {{- else }}
        emptyDir:
      {{- end }}
      - name: {{ include "mariadb.fullname" . }}-config
        configMap:
          name: {{ include "mariadb.fullname" . }}
      - name: {{ include "mariadb.fullname" . }}-secret
        secret:
          secretName: {{ include "mariadb.fullname" . }}
          defaultMode: 0444
      {{- if .Values.tls.enabled }}
      - name: {{ include "mariadb.fullname" . }}-tls
        secret:
          {{- if eq .Values.tls.type "certificate" }}
          secretName: {{ include "mariadb.fullname" . }}-tls
          {{- else if eq .Values.tls.type "secret" }}
          secretName: "{{ .Values.tls.secret }}"
          {{- end }}
          defaultMode: 0444
      {{- end }}
      {{- if .Values.ldap.enabled }}
      - name: {{ include "mariadb.fullname" . }}-ldap-templates
        configMap:
          name: {{ include "mariadb.fullname" . }}-ldap
      - name: {{ include "mariadb.fullname" . }}-ldap-rundir
        emptyDir:
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
