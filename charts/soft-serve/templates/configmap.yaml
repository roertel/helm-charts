apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "soft-serve.fullname" . }}
  labels: {{ include "soft-serve.labels" . | nindent 4 }}
data:
  entrypoint: |-
    #!/usr/bin/env sh
    # This script is needed for a very specific use case when the repo storage
    # persistent volume is provisioned with an NFS Ganesha server that runs on a
    # node different than the application node. This init script will initialize
    # the repostiory and ssh keys in an ephemeral volume, stop the server, move
    # the repository and ssh keys to the persistent volume, and then start the
    # server as usual. The reason for this is that NFS locks don't work properly
    # in this scenario. Fixes "FATA no locks available" failures.
    set -e
    # If the ssh key and repository paths don't exist...
    if [ ! -d "${SOFT_SERVE_REPO_PATH}/config" ] \
      || [ ! -f "${SOFT_SERVE_KEY_PATH}" ]; then
      mkdir -p "${SOFT_SERVE_REPO_PATH}" "$(dirname "${SOFT_SERVE_KEY_PATH}")"
      # ...and we can't create a lock (ex: NFS mounted)...
      if ! flock "${SOFT_SERVE_REPO_PATH/.lock}" test 1 2>/dev/null \
        || ! flock "${SOFT_SERVE_KEY_PATH}" test 1 2>/dev/null; then
        # ...then initialize the repo in an ephemeral volume...
        echo "$(date +"%F %R") Pre-initializing filesystem due to file locking issue"
        # Read output from soft until the server says it's started
        while read -r line; do
          echo "$line"
          echo "$line" | grep -ql "Starting SSH server" && killall soft
        done < <(SOFT_SERVE_REPO_PATH="/working${SOFT_SERVE_REPO_PATH}" \
          SOFT_SERVE_KEY_PATH="/working${SOFT_SERVE_KEY_PATH}" soft serve "$@" 2>&1)
        # ...and move it to the proper paths
        cp --recursive /working/* / && rm -rf /working/*
      fi
    fi
    echo "$(date +"%F %R") Starting server"
    soft serve "$@"
